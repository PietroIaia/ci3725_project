{{##############################################################################
Willy tratara de encontrar el camino hasta la manzana por medio de backtracking.
################################################################################}}


begin-world maze
    World 9 9;
    Start at 1 1 heading north;
    Object-type apple of color green;
    Object-type bread of color yellow;
    Place 1 of apple at 9 9;
    Basket of capacity 100;
    Place 99 of bread in basket;
    Wall north from 2 1 to 2 2;
    Wall north from 2 4 to 2 8;
    Wall north from 1 6 to 1 6;
    Wall east from 3 4 to 4 4;
    Wall east from 3 8 to 3 8;
    Wall south from 4 3 to 4 2;
    Wall east from 4 6 to 6 6;
    Wall east from 5 2 to 6 2;
    Wall north from 5 7 to 5 9;
    Wall west from 7 4 to 6 4;
    Wall north from 8 1 to 8 5;
    Wall east from 7 8 to 9 8;
    Wall east from 8 7 to 8 7;
    Goal condition is 1 apple objects in Basket;
    Final goal is condition;
end-world


{{ Encuentra el camino hasta la manzana por backtracking con un numero ilimitado de pasos }}
begin-task task1 on maze
    define goback as
        begin
            turn-left;
            turn-left;
            move;
        end;

    define backtrack as
    begin
        if carrying(apple) then terminate;

        -- Si encontramos la manzana, paramos
        if found(apple) then
        begin
            pick apple;
            terminate;
        end;
        
        if front-clear then
        begin
            move;
            backtrack;
            if carrying(apple) then terminate;
            goback;
            turn-left;
            turn-left;
        end;

        if left-clear then
        begin
            turn-left;
            move;
            backtrack;
            if carrying(apple) then terminate;
            goback;
            turn-left;
        end;
        
        if right-clear then
        begin
            turn-right;
            move;
            backtrack;
            if carrying(apple) then terminate;
            goback;
            turn-right;
        end;
    end;
    
    backtrack;
end-task


{{ Encuentra el camino hasta la manzana por backtracking con un numero limite de pasos }}
begin-task task2 on maze
    define goback as
        begin
            turn-left;
            turn-left;
            move;
            drop bread;
        end;

    define backtrack as
    begin
        if carrying(apple) then terminate;

        -- Si encontramos la manzana, paramos
        if found(apple) then
        begin
            pick apple;
            terminate;
        end;
        
        if front-clear and carrying(bread) then
        begin
            move;
            drop bread;
            backtrack;
            if carrying(apple) or not carrying(bread) then terminate;
            goback;
            turn-left;
            turn-left;
        end;

        if left-clear and carrying(bread) then
        begin
            turn-left;
            move;
            drop bread;
            backtrack;
            if carrying(apple) or not carrying(bread) then terminate;
            goback;
            turn-left;
        end;
        
        if right-clear and carrying(bread) then
        begin
            turn-right;
            move;
            drop bread;
            backtrack;
            if carrying(apple) or not carrying(bread) then terminate;
            goback;
            turn-right;
        end;
    end;
    
    backtrack;
end-task


{{####################################################################################################
En este mundo Willy no podra encontrar el camino hasta la manzana, esto para probar que la tarea falla
######################################################################################################}}

begin-world unbeatableMaze
    World 6 9;
    Start at 1 1 heading north;
    Object-type apple of color green;
    Object-type bread of color yellow;
    Place 1 of apple at 6 2;
    Basket of capacity 100;
    Place 99 of bread in basket;
    Wall north from 2 1 to 2 3;
    Wall north from 3 1 to 3 1;
    Wall east from 2 3 to 3 3;
    Wall north from 3 4 to 3 5;
    Wall east from 2 5 to 2 5;
    Wall east from 2 9 to 2 9;
    Wall east from 2 7 to 5 7;
    Wall north from 4 8 to 4 9;
    Wall east from 6 9 to 6 9;
    Wall north from 5 1 to 5 5;
    Wall east from 6 5 to 6 5;
    Goal condition is 1 apple objects in Basket;
    Final goal is condition;
end-world


begin-task task3 on unbeatableMaze
    define goback as
        begin
            turn-left;
            turn-left;
            move;
            drop bread;
        end;

    define backtrack as
    begin
        if carrying(apple) then terminate;

        -- Si encontramos la manzana, paramos
        if found(apple) then
        begin
            pick apple;
            terminate;
        end;
        
        if front-clear and carrying(bread) then
        begin
            move;
            drop bread;
            backtrack;
            if carrying(apple) or not carrying(bread) then terminate;
            goback;
            turn-left;
            turn-left;
        end;

        if left-clear and carrying(bread) then
        begin
            turn-left;
            move;
            drop bread;
            backtrack;
            if carrying(apple) or not carrying(bread) then terminate;
            goback;
            turn-left;
        end;
        
        if right-clear and carrying(bread) then
        begin
            turn-right;
            move;
            drop bread;
            backtrack;
            if carrying(apple) or not carrying(bread) then terminate;
            goback;
            turn-right;
        end;
    end;
    
    backtrack;
end-task



{{###############################################################################################################
En este programa, willy decorara las caras visibles de la pared que se encuentre, esto lo hara bordeando la pared.
Existen dos Fields para que se pueda evaluar en varios mundos. Para esto, cambiar el mundo donde se ejecuta task4.
#################################################################################################################}}


{{ 
    Condiciones:
    1- La capacidad del basket y cantidad de flower en ella debe concordar con las caras visibles por willy de la pared 
}}
begin-world Field1
    World 8 8;
    Start at 5 1 heading north;
    Object-type flower of color red;
    Basket of capacity 14;
    Place 14 of flower in basket;
    Boolean wallIsLeft with initial value false;
    Boolean wallIsRight with initial value false;
    Wall north from 5 3 to 5 4;
    Wall north from 6 3 to 6 5;
    Wall west from 4 5 to 4 5;
    Wall north from 3 3 to 3 4;
    Goal condition is 0 flower objects in Basket;
    Final goal is condition;
end-world

{{ 
    Condiciones:
    1- La capacidad del basket y cantidad de flower en ella debe concordar con las caras visibles de la pared
}}
begin-world Field2
    World 8 9;
    Start at 5 1 heading north;
    Object-type flower of color red;
    Basket of capacity 16;
    Place 16 of flower in basket;
    Boolean wallIsLeft with initial value false;
    Boolean wallIsRight with initial value false;
    Wall north from 5 3 to 5 4;
    Wall north from 6 3 to 6 4;
    Wall west from 4 5 to 3 5;
    Wall west from 4 6 to 3 6;
    Wall west from 4 7 to 3 7;
    Goal condition is 0 flower objects in Basket;
    Final goal is condition;
end-world

{{ 
    Condiciones:
    1- La capacidad del basket y cantidad de flower en ella debe concordar con las caras visibles de la pared
}}
begin-world Field3
    World 9 7;
    Start at 6 1 heading north;
    Object-type flower of color red;
    Basket of capacity 17;
    Place 17 of flower in basket;
    Boolean wallIsLeft with initial value false;
    Boolean wallIsRight with initial value false;
    Wall north from 7 3 to 7 5;
    Wall west from 6 5 to 4 5;
    Wall west from 3 4 to 3 4;
    Wall east from 4 3 to 5 3;
    Goal condition is 0 flower objects in Basket;
    Final goal is condition;
end-world


{{
    Condiciones:
    1- Willy debe empezar en direccion a una de las paredes a decorar
    2- Las paredes a decorar deben ser vecinas vertical, horizontal o diagonalmente
    3- Las paredes deben estar a una distancia de 2 casillas de los bordes del grid 
}}
begin-task task4 on Field1
    while front-clear do move;

    while carrying(flower) do begin
        if not front-clear then
            if not left-clear and not right-clear then begin
                turn-left;
                turn-left;
            end;
            else begin
                if not left-clear then begin
                    turn-right;
                    set wallIsLeft;
                    if wallIsRight then flip wallIsRight;
                end; 
                else begin
                    turn-left;
                    set wallIsRight;
                    if wallIsLeft then flip wallIsLeft;
                end;
            end;
        else
            if wallIsLeft and left-clear then begin
                turn-left;
                move;
            end;
            if wallIsRight and right-clear then begin
                turn-right;
                move;
            end;
        if not found(flower) then drop flower;
        if front-clear then move;
    end;
end-task


{{################################################################################################################
En este mundo se demuestra que se regresa un error cuando willy trata de moverse a una casilla donde hay una pared
##################################################################################################################}}

begin-world moveTest
    World 1 7;
    Wall north from 1 2 to 1 2;
    Goal condition is willy is at 1 7;
    Final goal is condition;
end-world

begin-task task5 on moveTest
    move;
end-task


{{################################################################################################################
En este mundo se demuestra que se regresa un error cuando willy trata de recoger un objeto que no esta en la casilla
o soltar un objeto que no esta en su bolsa.
##################################################################################################################}}

begin-world pickdropTest
    World 3 3;
    Object-type objeto of color cyan;
    Goal condition is 1 objeto objects in Basket;
    Final goal is condition;
end-world

{{ Para probar pick, descomentarlo y comentar drop objeto }}
begin-task task6 on pickdropTest
    --pick objeto;
    drop objeto;
end-task


{{################################################################################################################
En este mundo se demuestra que se regresa un error cuando willy trata de recoger un objeto y su basket ya se
encuentra full
##################################################################################################################}}

begin-world noMorePlease
    World 4 4;
    Object-type diamante of color cyan;
    Start at 1 1 heading north;
    Place 1 of diamante at 1 2;
    Basket of capacity 1;
    Place 1 of diamante in basket;
    Goal condition is 2 diamante objects in Basket;
    Final goal is condition;
end-world

begin-task task7 on noMorePlease
    move;
    pick diamante;
    move;
end-task


{{################################################################################################################
En este mundo, sin paredes, cada casilla tiene entre 0 y n basura, Willy se encargara de distribuir la basura entre 
las casillas para que todas una cantidad igual de basura. Si el numero de basura total mod(columna*fila) != 0, 
entonces la diferencia de basura entre cualquier casillas es menor o igual a 1.
##################################################################################################################}}

begin-world cualquierCalleEnCaracas
    World 10 10;
    Object-type basura of color magenta;
    Boolean recoger with initial value true;
    Start at 1 1 heading east;
    Place 1 of basura at 1 1;
    Place 12 of basura at 1 5;
    Place 10 of basura at 1 7;
    Place 2 of basura at 1 9;
    Place 5 of basura at 2 6;
    Place 15 of basura at 2 8;
    Place 2 of basura at 2 9;
    Place 6 of basura at 4 5;
    Place 7 of basura at 4 2;
    Place 12 of basura at 5 4;
    Place 4 of basura at 5 5;
    Place 9 of basura at 5 6;
    Place 5 of basura at 7 1;
    Place 3 of basura at 8 2;
    Place 1 of basura at 8 8;
    Place 9 of basura at 9 1;
    Place 5 of basura at 9 2;
    Place 3 of basura at 9 8;
    Place 1 of basura at 9 9;
    Place 5 of basura at 10 1;
    Place 3 of basura at 10 2;
    Place 1 of basura at 10 3;
    Basket of capacity 400;
    Goal condition is 0 basura objects in Basket;
    Final goal is condition;
end-world

begin-task task8 on cualquierCalleEnCaracas

    {{ Funcion que recorre el mundo casilla por casilla recogiendo o soltando basura}}
    define equilibrarBasura as begin
        while front-clear do begin
            if recoger then
                while found(basura) do pick basura;
            else
                if carrying(basura) then drop basura;
            move;
        end;

        -- No existen do-while loops en willy, por eso hago esto luego 
        if recoger then
            while found(basura) do pick basura;
        else
            if carrying(basura) then drop basura;

        -- Cambia de fila
        if looking-east and left-clear then begin
            turn-left;
            move;
            turn-left;
            terminate;
        end;
        if looking-west and right-clear then begin
            turn-right;
            move;
            turn-right;
            terminate;
        end;
    end;

    {{ Funcion que devuelve a Willy a la casilla inicial}}
    define returnStart as begin
        if looking-east then begin
            turn-left;
            turn-left;
        end;

        while front-clear do move;
        turn-left;
        while front-clear do move;
        turn-left;
    end;


    while carrying(basura) or recoger do begin
        -- 10 es el numero de filas en el mundo
        repeat 10 times equilibrarBasura;
        returnStart;
        -- Una vez recogida la basura del mundo, no se vuelve a recoger
        if recoger then set recoger to false;
    end;
    
end-task

{{##############################################################################
Willy busca la cura del corona virus y luego la esparce por todo el mundo
################################################################################}}


begin-world coronavirusworld
    World 9 9;
    Start at 1 1 heading north;
    Object-type curadelcoronavirus of color green;
    Object-type mision of color magenta;
    Object-type coronavirus of color magenta;
    Place 50 of curadelcoronavirus at 9 9;
    Place 1 of mision in basket;
    Place 1 of coronavirus at 1 1;
    Place 1 of coronavirus at 3 1;
    Place 1 of coronavirus at 4 1;
    Place 1 of coronavirus at 5 1;
    Place 1 of coronavirus at 3 2;
    Place 1 of coronavirus at 3 3;
    Place 1 of coronavirus at 2 3;
    Place 1 of coronavirus at 1 3;
    Place 1 of coronavirus at 1 4;
    Place 1 of coronavirus at 1 5;
    Place 1 of coronavirus at 1 7;
    Place 1 of coronavirus at 1 9;
    Place 1 of coronavirus at 3 5;
    Place 1 of coronavirus at 3 6;
    Place 1 of coronavirus at 3 7;
    Place 1 of coronavirus at 3 9;
    Place 1 of coronavirus at 5 3;
    Place 1 of coronavirus at 5 4;
    Place 1 of coronavirus at 5 5;
    Place 1 of coronavirus at 7 1;
    Place 1 of coronavirus at 7 3;
    Place 1 of coronavirus at 7 6;
    Place 1 of coronavirus at 7 7;
    Place 1 of coronavirus at 9 1;
    Place 1 of coronavirus at 9 2;
    Place 1 of coronavirus at 9 3;
    Place 1 of coronavirus at 9 4;
    Place 1 of coronavirus at 9 6;
    Place 1 of coronavirus at 9 7;
    Place 1 of coronavirus at 9 9;
    Place 1 of coronavirus at 1 8;
    Place 1 of coronavirus at 1 2;
    Place 1 of coronavirus at 2 9;
    Place 1 of coronavirus at 4 5;
    Place 1 of coronavirus at 4 7;
    Place 1 of coronavirus at 4 8;
    Place 1 of coronavirus at 6 1;
    Place 1 of coronavirus at 6 3;
    Place 1 of coronavirus at 6 5;
    Place 1 of coronavirus at 6 7;
    Place 1 of coronavirus at 6 8;
    Place 1 of coronavirus at 6 9;
    Place 1 of coronavirus at 7 9;
    Place 1 of coronavirus at 7 5;
    Place 1 of coronavirus at 7 2;
    Place 1 of coronavirus at 8 6;
    Place 1 of coronavirus at 8 9;
    Place 1 of coronavirus at 9 5;
    Place 1 of coronavirus at 4 9;

    Basket of capacity 51;
    Wall north from 2 1 to 2 2;
    Wall north from 2 4 to 2 8;
    Wall north from 1 6 to 1 6;
    Wall east from 3 4 to 4 4;
    Wall east from 3 8 to 3 8;
    Wall south from 4 3 to 4 2;
    Wall east from 4 6 to 6 6;
    Wall east from 5 2 to 6 2;
    Wall north from 5 7 to 5 9;
    Wall west from 7 4 to 6 4;
    Wall north from 8 1 to 8 5;
    Wall east from 7 8 to 9 8;
    Wall east from 8 7 to 8 7;
    Goal condition1 is 0 curadelcoronavirus objects in Basket;
    Goal condition2 is 0 mision objects in Basket;
    Goal condition3 is 50 coronavirus objects in Basket;
    Final goal is condition1 and condition2 and condition3;
end-world


begin-task task9 on coronavirusworld
    define goBack as
        begin
            turn-left;
            turn-left;
            move;
        end;

    define spreadCure as
    begin
        if not carrying(curadelcoronavirus) then terminate;
        
        if found(coronavirus) then
        begin
            pick coronavirus;
            drop curadelcoronavirus;
            spreadCure;
        end;

        if front-clear then
        begin
            move;
            spreadCure;
            if not carrying(curadelcoronavirus) then terminate;
            if found(coronavirus) then
                begin
                    pick coronavirus;
                    drop curadelcoronavirus;
                    spreadCure;
                end;
            goBack;
            turn-left;
            turn-left;
        end;

        if left-clear then
        begin
            turn-left;
            move;
            spreadCure;
            if not carrying(curadelcoronavirus) then terminate;
            if found(coronavirus) then
                begin
                    pick coronavirus;
                    drop curadelcoronavirus;
                    spreadCure;
                end;
            goBack;
            turn-left;
        end;
        
        if right-clear then
        begin
            turn-right;
            move;
            spreadCure;
            if not carrying(curadelcoronavirus) then terminate;
            if found(coronavirus) then
                begin
                    pick coronavirus;
                    drop curadelcoronavirus;
                    spreadCure;
                end;
            goBack;
            turn-right;
        end;
    end;

    define findCure as
    begin
        if found(curadelcoronavirus) then
        begin
            while found(curadelcoronavirus) do pick curadelcoronavirus;
            drop mision;
            spreadCure;
            terminate;
        end;
        
        if front-clear then
        begin
            move;
            findCure;
            goBack;
            turn-left;
            turn-left;
        end;

        if left-clear then
        begin
            turn-left;
            move;
            findCure;
            goBack;
            turn-left;
        end;
        
        if right-clear then
        begin
            turn-right;
            move;
            findCure;
            goBack;
            turn-right;
        end;
    end;


    findCure;
    
end-task